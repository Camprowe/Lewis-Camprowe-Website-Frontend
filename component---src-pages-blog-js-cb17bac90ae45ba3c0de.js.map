{"version":3,"sources":["webpack:///./src/components/blogSection/blogSection.js","webpack:///./src/components/blogSection/blogSection.module.css","webpack:///./src/pages/blog.js"],"names":["blogSection","props","className","blogSectionStyles","section","title","length","to","gridContainer","posts","map","excerpt","frontmatter","fields","gridItem","slug","fluid","image","childImageSharp","details","description","module","exports","Blog","data","sources","mobileImage","desktopImage","media","metadescription","metatitle","lang","name","content","rel","href","property","src","allMdx","nodes","query"],"mappings":"2FAAA,iHAKe,SAASA,EAAYC,GAClC,OAAO,6BAASC,UAAWC,IAAkBC,SAClCH,EAAMI,MAAMC,OAAS,GACpB,kBAAC,IAAD,CAAMC,GAAG,UAAU,4BAAKN,EAAMI,QAEhC,yBAAKH,UAAU,aACb,yBAAKA,UAAWC,IAAkBK,eAC/BP,EAAMQ,MAAMC,KAAI,cAAGC,QAAH,IAAYC,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,OAAzB,OACX,yBAAKX,UAAWC,IAAkBW,UAChC,kBAAC,IAAD,CAAMP,GAAIM,EAAOE,MAAM,kBAAC,IAAD,CAAKC,MAAOJ,EAAYK,MAAMC,gBAAgBF,SACrE,yBAAKd,UAAWC,IAAkBgB,SAChC,kBAAC,IAAD,CAAMZ,GAAIM,EAAOE,MAAM,4BAAKH,EAAYP,QACxC,2BAAIO,EAAYQ,uB,qBChB1CC,EAAOC,QAAU,CAAC,QAAU,qCAAqC,cAAgB,2CAA2C,SAAW,sCAAsC,QAAU,uC,iyBCOxK,SAASC,EAAT,GAAuB,IAARC,EAAO,EAAPA,KACtBC,EAAU,CACdD,EAAKE,YAAYR,gBAAgBF,MADnB,OAGTQ,EAAKG,aAAaT,gBAAgBF,OAHzB,IAIZY,MAAM,wBAIJC,EAAgB,8PAChBC,EAAU,gCAEhB,OACE,oCACE,kBAAC,IAAD,KACE,0BAAMC,KAAK,OACX,+BAAQD,GACR,0BAAME,KAAK,cAAcC,QAASJ,IAClC,0BAAMK,IAAI,YAAYC,KAAK,+BAC3B,0BAAMC,SAAS,UAAUH,QAAQ,YACjC,0BAAMG,SAAS,WAAWH,QAAS,6BAA+BR,EAAQ,GAAGY,MAC7E,0BAAMD,SAAS,iBAAiBH,QAASJ,IACzC,0BAAMO,SAAS,WAAWH,QAASH,IACnC,0BAAME,KAAK,eAAeC,QAAQ,wBAClC,0BAAMD,KAAK,eAAeC,QAAQ,oBAClC,0BAAMD,KAAK,kBAAkBC,QAAQ,oBACrC,0BAAMD,KAAK,gBAAgBC,QAASH,IACpC,0BAAME,KAAK,sBAAsBC,QAASJ,IAC1C,0BAAMG,KAAK,gBAAgBC,QAAS,6BAA+BR,EAAQ,GAAGY,OAEhF,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAapB,MAAOQ,EAASpB,MAAM,OAAOe,YAAY,gQACtD,kBAAC,IAAD,CAAaX,MAAOe,EAAKc,OAAOC,MAAOlC,MAAM,KAC7C,kBAAC,IAAD,OAKC,IAAMmC,EAAK","file":"component---src-pages-blog-js-cb17bac90ae45ba3c0de.js","sourcesContent":["import React from \"react\"\nimport blogSectionStyles from \"./blogSection.module.css\"\nimport { Link } from 'gatsby'\nimport Img from \"gatsby-image\"\n\nexport default function blogSection(props) {\n  return <section className={blogSectionStyles.section}>\n            {props.title.length > 0 &&\n              <Link to=\"/blog/\" ><h1>{props.title}</h1></Link>\n            }\n            <div className=\"container\">\n              <div className={blogSectionStyles.gridContainer}>\n                {props.posts.map(({ excerpt, frontmatter, fields }) => (\n                      <div className={blogSectionStyles.gridItem}>\n                        <Link to={fields.slug}><Img fluid={frontmatter.image.childImageSharp.fluid} /></Link>\n                        <div className={blogSectionStyles.details}>\n                          <Link to={fields.slug}><h2>{frontmatter.title}</h2></Link>\n                          <p>{frontmatter.description}</p>\n                        </div>\n                      </div>\n                  ))}            \n              </div>\n            </div>\n          </section>\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"blogSection-module--section--3pQMk\",\"gridContainer\":\"blogSection-module--gridContainer--38kZq\",\"gridItem\":\"blogSection-module--gridItem--3Dh-L\",\"details\":\"blogSection-module--details--2l0o4\"};","import React from \"react\"\nimport Header from \"../components/header/header\"\nimport HeaderImage from \"../components/headerSection/headerSection\"\nimport BlogSection from \"../components/blogSection/blogSection\"\nimport Footer from \"../components/footer/footer\"\nimport { graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\n\nexport default function Blog({data}) {\n  const sources = [\n    data.mobileImage.childImageSharp.fluid,\n    {\n      ...data.desktopImage.childImageSharp.fluid,\n      media: `(min-width: 768px)`,\n    },\n  ]\n\n  const metadescription=\"Lewis's musings and learnings as a maker of things. What has he learnt or thought about while making things every week, whether Lewis is developing a project, creating and growing a brand, worldbuilding places to explore or investigating technologies.\";\n  const metatitle=\"Blog - Lewis Matthew Campbell\";\n\n  return (\n    <>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{metatitle}</title>\n        <meta name=\"description\" content={metadescription} />\n        <link rel=\"canonical\" href=\"https://lewismcampbell.com\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:image\" content={'https://lewismcampbell.com' + sources[1].src} />\n        <meta property=\"og:description\" content={metadescription} />\n        <meta property=\"og:title\" content={metatitle} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"@lewismcampbell\" />\n        <meta name=\"twitter:creator\" content=\"@lewismcampbell\" />\n        <meta name=\"twitter:title\" content={metatitle}/>\n        <meta name=\"twitter:description\" content={metadescription} />\n        <meta name=\"twitter:image\" content={'https://lewismcampbell.com' + sources[1].src} />\n      </Helmet>\n      <Header />\n      <HeaderImage image={sources} title=\"Blog\" description=\"Lewis's musings and learnings as a maker of things. What has he learnt or thought about while making things every week, whether Lewis is developing a project, creating and growing a brand, worldbuilding places to explore or investigating technologies.\" />\n      <BlogSection posts={data.allMdx.nodes} title=\"\" /> \n      <Footer />\n    </>\n  );\n}\n\nexport const query = graphql`\n  query {\n    desktopImage: file(relativePath: { eq: \"Blog.jpg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(quality: 100, maxWidth: 1920) {\n          ...GatsbyImageSharpFluid_withWebp_noBase64\n        }\n      }\n    }\n    mobileImage: file(relativePath: { eq: \"Blog.jpg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(quality: 100, maxWidth: 768) {\n          ...GatsbyImageSharpFluid_withWebp_noBase64\n        }\n      }\n    }\n    allMdx(\n      sort: {fields: [frontmatter___date], order: DESC},\n      filter: {frontmatter: {published: {eq: true}}}\n    ){\n        nodes {\n            id\n            excerpt(pruneLength: 250)\n            frontmatter {\n                title\n                date(formatString: \"YYYY MMMM Do\")\n                image {\n                  childImageSharp {\n                    fluid(quality: 100) {\n                      ...GatsbyImageSharpFluid_withWebp_noBase64\n                    }\n                  }\n                }\n                description\n            }\n            fields {\n                slug\n            }\n        }\n    }\n  }\n`"],"sourceRoot":""}