{"version":3,"sources":["webpack:///./src/components/blogSection/blogSection.js","webpack:///./src/components/blogSection/blogSection.module.css","webpack:///./src/pages/blog.js"],"names":["blogSection","props","className","blogSectionStyles","section","title","length","to","gridContainer","posts","map","excerpt","frontmatter","fields","gridItem","slug","fluid","image","childImageSharp","details","description","module","exports","Blog","data","sources","mobileImage","desktopImage","media","metadescription","metatitle","lang","content","name","rel","href","property","src","allMdx","nodes","query"],"mappings":"2FAAA,wGAKe,SAASA,EAAYC,GAClC,OAAO,mCAASC,UAAWC,IAAkBC,SAClCH,EAAMI,MAAMC,OAAS,GACpB,wBAAC,IAAD,CAAMC,GAAG,UAAU,kCAAKN,EAAMI,QAEhC,+BAAKH,UAAU,aACb,+BAAKA,UAAWC,IAAkBK,eAC/BP,EAAMQ,MAAMC,KAAI,cAAGC,QAAH,IAAYC,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,OAAzB,OACX,+BAAKX,UAAWC,IAAkBW,UAChC,wBAAC,IAAD,CAAMP,GAAIM,EAAOE,MAAM,wBAAC,IAAD,CAAKC,MAAOJ,EAAYK,MAAMC,gBAAgBF,SACrE,+BAAKd,UAAWC,IAAkBgB,SAChC,wBAAC,IAAD,CAAMZ,GAAIM,EAAOE,MAAM,kCAAKH,EAAYP,QACxC,iCAAIO,EAAYQ,uB,qBChB1CC,EAAOC,QAAU,CAAC,QAAU,qCAAqC,cAAgB,2CAA2C,SAAW,sCAAsC,QAAU,uC,wxBCOxK,SAASC,EAAT,GAAuB,IAARC,EAAO,EAAPA,KACtBC,EAAU,CACdD,EAAKE,YAAYR,gBAAgBF,MADnB,OAGTQ,EAAKG,aAAaT,gBAAgBF,OAHzB,IAIZY,MAAM,wBAIJC,EAAgB,8PAChBC,EAAU,wBAEhB,OACE,gDACE,wBAAC,IAAD,KACE,gCAAMC,KAAK,OACX,gCAAMC,QAAQ,2BAA2BC,KAAK,iBAC9C,qCAAQH,GACR,gCAAMG,KAAK,cAAcD,QAASH,IAClC,gCAAMK,IAAI,YAAYC,KAAK,+BAC3B,gCAAMC,SAAS,UAAUJ,QAAQ,YACjC,gCAAMI,SAAS,WAAWJ,QAAS,6BAA+BP,EAAQ,GAAGY,MAC7E,gCAAMD,SAAS,iBAAiBJ,QAASH,IACzC,gCAAMO,SAAS,WAAWJ,QAASF,IACnC,gCAAMG,KAAK,eAAeD,QAAQ,wBAClC,gCAAMC,KAAK,eAAeD,QAAQ,oBAClC,gCAAMC,KAAK,kBAAkBD,QAAQ,oBACrC,gCAAMC,KAAK,gBAAgBD,QAASF,IACpC,gCAAMG,KAAK,sBAAsBD,QAASH,IAC1C,gCAAMI,KAAK,gBAAgBD,QAAS,6BAA+BP,EAAQ,GAAGY,OAEhF,wBAAC,IAAD,MACA,wBAAC,IAAD,CAAapB,MAAOQ,EAASpB,MAAM,OAAOe,YAAY,gQACtD,wBAAC,IAAD,CAAaX,MAAOe,EAAKc,OAAOC,MAAOlC,MAAM,KAC7C,wBAAC,IAAD,OAKC,IAAMmC,EAAK","file":"component---src-pages-blog-js-5dd81362736385d941e6.js","sourcesContent":["import React from \"react\"\r\nimport blogSectionStyles from \"./blogSection.module.css\"\r\nimport { Link } from 'gatsby'\r\nimport Img from \"gatsby-image\"\r\n\r\nexport default function blogSection(props) {\r\n  return <section className={blogSectionStyles.section}>\r\n            {props.title.length > 0 &&\r\n              <Link to=\"/blog/\" ><h1>{props.title}</h1></Link>\r\n            }\r\n            <div className=\"container\">\r\n              <div className={blogSectionStyles.gridContainer}>\r\n                {props.posts.map(({ excerpt, frontmatter, fields }) => (\r\n                      <div className={blogSectionStyles.gridItem}>\r\n                        <Link to={fields.slug}><Img fluid={frontmatter.image.childImageSharp.fluid} /></Link>\r\n                        <div className={blogSectionStyles.details}>\r\n                          <Link to={fields.slug}><h2>{frontmatter.title}</h2></Link>\r\n                          <p>{frontmatter.description}</p>\r\n                        </div>\r\n                      </div>\r\n                  ))}            \r\n              </div>\r\n            </div>\r\n          </section>\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"blogSection-module--section--2lCdd\",\"gridContainer\":\"blogSection-module--gridContainer--3Cys0\",\"gridItem\":\"blogSection-module--gridItem--11esM\",\"details\":\"blogSection-module--details--26gSr\"};","import React from \"react\"\r\nimport Header from \"../components/header/header\"\r\nimport HeaderImage from \"../components/headerSection/headerSection\"\r\nimport BlogSection from \"../components/blogSection/blogSection\"\r\nimport Footer from \"../components/footer/footer\"\r\nimport { graphql } from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nexport default function Blog({data}) {\r\n  const sources = [\r\n    data.mobileImage.childImageSharp.fluid,\r\n    {\r\n      ...data.desktopImage.childImageSharp.fluid,\r\n      media: `(min-width: 768px)`,\r\n    },\r\n  ]\r\n\r\n  const metadescription=\"Lewis's musings and learnings as a maker of things. What has he learnt or thought about while making things every week, whether Lewis is developing a project, creating and growing a brand, worldbuilding places to explore or investigating technologies.\";\r\n  const metatitle=\"Blog - Lewis Campbell\";\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <html lang=\"en\" />\r\n        <meta content=\"text/html; charset=UTF-8\" name=\"Content-Type\" />\r\n        <title>{metatitle}</title>\r\n        <meta name=\"description\" content={metadescription} />\r\n        <link rel=\"canonical\" href=\"https://lewismcampbell.com\" />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:image\" content={'https://lewismcampbell.com' + sources[1].src} />\r\n        <meta property=\"og:description\" content={metadescription} />\r\n        <meta property=\"og:title\" content={metatitle} />\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:site\" content=\"@lewismcampbell\" />\r\n        <meta name=\"twitter:creator\" content=\"@lewismcampbell\" />\r\n        <meta name=\"twitter:title\" content={metatitle}/>\r\n        <meta name=\"twitter:description\" content={metadescription} />\r\n        <meta name=\"twitter:image\" content={'https://lewismcampbell.com' + sources[1].src} />\r\n      </Helmet>\r\n      <Header />\r\n      <HeaderImage image={sources} title=\"Blog\" description=\"Lewis's musings and learnings as a maker of things. What has he learnt or thought about while making things every week, whether Lewis is developing a project, creating and growing a brand, worldbuilding places to explore or investigating technologies.\" />\r\n      <BlogSection posts={data.allMdx.nodes} title=\"\" /> \r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    desktopImage: file(relativePath: { eq: \"Blog.jpg\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(quality: 100, maxWidth: 1920) {\r\n          ...GatsbyImageSharpFluid_withWebp_noBase64\r\n        }\r\n      }\r\n    }\r\n    mobileImage: file(relativePath: { eq: \"Blog.jpg\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(quality: 100, maxWidth: 768) {\r\n          ...GatsbyImageSharpFluid_withWebp_noBase64\r\n        }\r\n      }\r\n    }\r\n    allMdx(\r\n      sort: {fields: [frontmatter___date], order: DESC},\r\n      filter: {frontmatter: {published: {eq: true}}}\r\n    ){\r\n        nodes {\r\n            id\r\n            excerpt(pruneLength: 250)\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"YYYY MMMM Do\")\r\n                image {\r\n                  childImageSharp {\r\n                    fluid(quality: 100) {\r\n                      ...GatsbyImageSharpFluid_withWebp_noBase64\r\n                    }\r\n                  }\r\n                }\r\n                description\r\n            }\r\n            fields {\r\n                slug\r\n            }\r\n        }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}